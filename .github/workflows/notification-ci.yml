name: CI/CD - Notification Service

on:
  push:
    paths:
      - 'services/notification/**'
      - '.github/workflows/notification-ci.yml'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: silverdeath366/notification
      HELM_CHART_PATH: helm/charts/notification
      VALUES_FILE: helm/charts/notification/values.yaml

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Extract short SHA
      id: vars
      run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m venv venv
        ./venv/bin/pip install --upgrade pip
        ./venv/bin/pip install -r services/notification/requirements.txt
        ./venv/bin/pip install pytest

    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV

    - name: Run Tests
      run: |
        ./venv/bin/python -m pytest services/notification/tests

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: |
        docker build -t $IMAGE_NAME:${{ steps.vars.outputs.sha_short }} -f services/notification/Dockerfile services/notification
        docker tag $IMAGE_NAME:${{ steps.vars.outputs.sha_short }} $IMAGE_NAME:latest

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.sha_short }}
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        severity: 'CRITICAL,HIGH'

    - name: Push Docker images
      run: |
        docker push $IMAGE_NAME:${{ steps.vars.outputs.sha_short }}
        docker push $IMAGE_NAME:latest

    - name: Update Helm values.yaml with SHA tag
      run: |
        sed -i 's|tag:.*|tag: "${{ steps.vars.outputs.sha_short }}"|' $VALUES_FILE
